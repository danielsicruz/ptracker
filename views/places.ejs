<!DOCTYPE html>
<html lang="pt-br" data-bs-theme="auto">
  <head>
    <script src="/assets/js/color-modes.js"></script>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="" />
    <meta
      name="author"
      content="Mark Otto, Jacob Thornton, and Bootstrap contributors"
    />
    <meta name="generator" content="Hugo 0.115.4" />
    <title><%- pageName %> · Ptracker</title>

    <link
      rel="canonical"
      href="https://getbootstrap.com/docs/5.3/examples/dashboard/"
    />

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/@docsearch/css@3"
    />

    <link href="/assets/dist/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Custom styles for this template -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css"
      rel="stylesheet"
    />
    <!-- Custom styles for this template -->
    <link href="/assets/css/dashboard.css" rel="stylesheet" />
    <link href="/assets/css/style.css" rel="stylesheet" />
  </head>

  <body>
    <%- include('./components/themeSwitch') %>

    <header
      class="navbar sticky-top bg-dark flex-md-nowrap p-0 shadow"
      data-bs-theme="dark"
    >
      <a
        class="navbar-brand col-md-3 col-lg-2 me-0 px-3 fs-6 text-white"
        href="#"
        ><img src="/assets/images/Sesi-SP.jpg" width="130px"
      /></a>

      <ul class="navbar-nav flex-row d-md-none">
        <li class="nav-item text-nowrap">
          <button
            class="nav-link px-3 text-white"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#navbarSearch"
            aria-controls="navbarSearch"
            aria-expanded="false"
            aria-label="Toggle search"
          >
            <svg class="bi">
              <use xlink:href="#search" />
            </svg>
          </button>
        </li>
        <li class="nav-item text-nowrap">
          <button
            class="nav-link px-3 text-white"
            type="button"
            data-bs-toggle="offcanvas"
            data-bs-target="#sidebarMenu"
            aria-controls="sidebarMenu"
            aria-expanded="false"
            aria-label="Toggle navigation"
          >
            <svg class="bi">
              <use xlink:href="#list" />
            </svg>
          </button>
        </li>
      </ul>

      <div id="navbarSearch" class="navbar-search w-100 collapse">
        <input
          class="form-control w-100 rounded-0 border-0"
          type="text"
          placeholder="Search"
          aria-label="Search"
        />
      </div>
    </header>

    <div class="container-fluid">
      <div class="row">
        <%- include('./components/sidebar') %>

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
          <div class="container">
            <div class="row">
              <div class="row">
                <h3 class="pt-3">Qual local iremos verificar?</h3>
                <input
                  class="form-control"
                  type="search"
                  placeholder="Pesquisar"
                  id="searchBar"
                  aria-label="Search"
                />
              </div>
              <div id="placeList" class="row row-cols-1 row-cols-md-3 g-4">
                <div
                  aria-label="Orange and tan hamster running in a metal wheel"
                  role="img"
                  class="wheel-and-hamster top-50 start-50"
                >
                  <div class="wheel"></div>
                  <div class="hamster">
                    <div class="hamster__body">
                      <div class="hamster__head">
                        <div class="hamster__ear"></div>
                        <div class="hamster__eye"></div>
                        <div class="hamster__nose"></div>
                      </div>
                      <div class="hamster__limb hamster__limb--fr"></div>
                      <div class="hamster__limb hamster__limb--fl"></div>
                      <div class="hamster__limb hamster__limb--br"></div>
                      <div class="hamster__limb hamster__limb--bl"></div>
                      <div class="hamster__tail"></div>
                    </div>
                  </div>
                  <div class="spoke"></div>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
    <script src="/assets/dist/js/bootstrap.bundle.min.js"></script>

    <script
      src="https://cdn.jsdelivr.net/npm/chart.js@4.2.1/dist/chart.umd.min.js"
      integrity="sha384-gdQErvCNWvHQZj6XZM0dNsAoY4v+j5P1XDpNkcM3HJG1Yx04ecqIHk7+4VBOCHOG"
      crossorigin="anonymous"
    ></script>
    <script>
      function cardBuilder(place) {
          const lastChecked = place.whereChecked.length > 0 ? place.whereChecked[place.whereChecked.length - 1] : null;

          return (
              '<div class="col">' +
              '<div class="card" onclick="verifyAmbient('+ place.id +');">' +
              '<img' +
              ' src="/assets/images/Sesi-SP.jpg"' +
              ' class="card-img-top"' +
              ' alt="..."' +
              '/>' +
              '<div class="card-body">' +
              '<h5 class="card-title">' + place.name + '</h5>' +
              buildCardBodyText(lastChecked) +
              '</div>' +
              '</div>' +
              '</div>'
          );
      }

      function buildCardBodyText(lastChecked) {
          if (lastChecked) {
              const date = lastChecked.createdAt.toString().split('-');
              return (
                  '<p class="card-text">' +
                  'Esta sala possui ' +
                  lastChecked.objectsToFind +
                  ' objetos para serem encontrados<br />' +
                  'A última verificação foi feita no dia ' + date[2].split('T')[0] + '/' + date[1] + '/' + date[0] +
                  '</p>'
              );
          } else {
              return '<p class="card-text">Esta sala ainda não foi verificada</p>';
          }
      }

            document.addEventListener('DOMContentLoaded', () => {
              const searchBar = document.getElementById('searchBar');
              const placeList = document.getElementById('placeList');
              const places = <%- JSON.stringify(datas) %>

              function renderPlaces(search) {
                placeList.innerHTML = '';

                const filteredPlaces = places.filter(place =>{
                  return place.name.toLowerCase().includes(search.toLowerCase())
                })

                filteredPlaces.forEach(place => {
                  placeList.innerHTML += cardBuilder(place);
                });
              }
              searchBar.addEventListener('input', () => {
                const searchTerm = searchBar.value;
                renderPlaces(searchTerm);
                });
              renderPlaces('');
              });
              function verifyAmbient(id) {
                window.location = '/places/verifying/'+id
              }
    </script>
    <script src="/assets/js/dashboard.js"></script>
  </body>
</html>
